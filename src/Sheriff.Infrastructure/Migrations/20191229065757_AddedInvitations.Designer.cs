// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sheriff.Infrastructure.Repositories;

namespace Sheriff.Infrastructure.Migrations
{
    [DbContext(typeof(SheriffContext))]
    [Migration("20191229065757_AddedInvitations")]
    partial class AddedInvitations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.Band", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BossId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BossId")
                        .IsUnique()
                        .HasFilter("[BossId] IS NOT NULL");

                    b.ToTable("Bands");
                });

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.BandMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BandId")
                        .HasColumnType("int");

                    b.Property<int>("BanditId")
                        .HasColumnType("int");

                    b.Property<int>("ScoringId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BandId");

                    b.HasIndex("BanditId");

                    b.HasIndex("ScoringId")
                        .IsUnique();

                    b.ToTable("BandMembers");
                });

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.Bandit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScoringId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScoringId")
                        .IsUnique();

                    b.ToTable("Bandits");
                });

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BandId")
                        .HasColumnType("int");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<int>("HandlerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BandId");

                    b.HasIndex("GuestId");

                    b.HasIndex("HandlerId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BanditId")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BanditId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SheriffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BandId");

                    b.HasIndex("SheriffId")
                        .IsUnique()
                        .HasFilter("[SheriffId] IS NOT NULL");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.RoundMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("RoundId")
                        .HasColumnType("int");

                    b.Property<int>("ScoringId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("RoundId");

                    b.HasIndex("ScoringId")
                        .IsUnique();

                    b.ToTable("RoundMembers");
                });

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("LootSize")
                        .HasColumnType("float");

                    b.Property<double>("LootValue")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Service")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Scorings");
                });

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.Band", b =>
                {
                    b.HasOne("Sheriff.Infrastructure.Entities.BandMember", "Boss")
                        .WithOne()
                        .HasForeignKey("Sheriff.Infrastructure.Entities.Band", "BossId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.BandMember", b =>
                {
                    b.HasOne("Sheriff.Infrastructure.Entities.Band", "Band")
                        .WithMany("Members")
                        .HasForeignKey("BandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sheriff.Infrastructure.Entities.Bandit", "Bandit")
                        .WithMany("Bands")
                        .HasForeignKey("BanditId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sheriff.Infrastructure.Entities.Score", "Scoring")
                        .WithOne()
                        .HasForeignKey("Sheriff.Infrastructure.Entities.BandMember", "ScoringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.Bandit", b =>
                {
                    b.HasOne("Sheriff.Infrastructure.Entities.Score", "Scoring")
                        .WithOne()
                        .HasForeignKey("Sheriff.Infrastructure.Entities.Bandit", "ScoringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.Invitation", b =>
                {
                    b.HasOne("Sheriff.Infrastructure.Entities.Band", "Band")
                        .WithMany()
                        .HasForeignKey("BandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sheriff.Infrastructure.Entities.Bandit", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sheriff.Infrastructure.Entities.Bandit", "Handler")
                        .WithMany()
                        .HasForeignKey("HandlerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.Notification", b =>
                {
                    b.HasOne("Sheriff.Infrastructure.Entities.Bandit", "Bandit")
                        .WithMany("Notifications")
                        .HasForeignKey("BanditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.Round", b =>
                {
                    b.HasOne("Sheriff.Infrastructure.Entities.Band", null)
                        .WithMany("Rounds")
                        .HasForeignKey("BandId");

                    b.HasOne("Sheriff.Infrastructure.Entities.RoundMember", "Sheriff")
                        .WithOne()
                        .HasForeignKey("Sheriff.Infrastructure.Entities.Round", "SheriffId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Sheriff.Infrastructure.Entities.RoundMember", b =>
                {
                    b.HasOne("Sheriff.Infrastructure.Entities.BandMember", "Member")
                        .WithMany("Rounds")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sheriff.Infrastructure.Entities.Round", "Round")
                        .WithMany("Members")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sheriff.Infrastructure.Entities.Score", "Scoring")
                        .WithOne()
                        .HasForeignKey("Sheriff.Infrastructure.Entities.RoundMember", "ScoringId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
